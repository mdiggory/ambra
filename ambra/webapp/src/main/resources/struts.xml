<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">

<!--
  Copyright (c) 2006-2010 by Public Library of Science
  http://plos.org
  http://ambraproject.org

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<struts>

  <constant name="struts.objectFactory"
      value="org.apache.struts2.spring.StrutsSpringObjectFactory"/>
  <constant name="struts.objectFactory.spring.autoWire" value="name"/>
  <constant name="struts.devMode" value="false"/>
  <constant name="struts.freemarker.manager.classname" value="ambraFreemarkerManager"/>
  <constant name="struts.i18n.encoding" value="UTF-8"/>
  <constant name="struts.ui.theme" value="ambra-theme"/>
  <constant name="struts.ui.templateDir" value="template"/>
  <constant name="struts.ui.templateSuffix" value="ftl"/>
  <!--
  allow the mapping of friendly URIs,
  e.g. "/article/feed" v. requiring "/article/articleFeed.action?parms"
  -->

  <include file="struts-default.xml" />

  <package name="default" extends="struts-default">
    <result-types>
      <result-type name="freemarker"
        class="org.apache.struts2.views.freemarker.FreemarkerResult" default="true">
      </result-type>
      <result-type name="ambraFreemarker" class="org.ambraproject.struts2.AmbraFreemarkerResult">
        <param name="location">/templates/main_template.ftl</param>
      </result-type>
      <result-type name="ambraStaticFreemarker" class="org.ambraproject.struts2.AmbraFreemarkerResult">
        <param name="location">/templates/main_static_template.ftl</param>
      </result-type>
      <result-type name="headless" class="org.ambraproject.struts2.AmbraFreemarkerResult">
        <param name="location">/templates/headless_template.ftl</param>
      </result-type>
      <result-type name="naked" class="org.ambraproject.struts2.AmbraFreemarkerResult">
        <param name="location">/templates/naked_template.ftl</param>
      </result-type>
      <result-type name="user" class="org.ambraproject.struts2.AmbraFreemarkerResult">
        <param name="location">/templates/user_shared_template.ftl</param>
      </result-type>
      <result-type name="ambraStream" class="org.ambraproject.struts2.AmbraStreamResult" />
      <result-type name="json" class="org.ambraproject.struts2.JsonResult">
        <param name="excludeProperties">advisors, callbacks</param>
        <param name="ignoreHierarchy">false</param>
        <param name="noCache">true</param>
        <param name="wrapWithComments">true</param>
      </result-type>
      <result-type name="feed" class="org.ambraproject.struts2.AmbraFeedResult"/>
      <result-type name="citation" class="org.ambraproject.struts2.CitationResult"/>
    </result-types>

    <interceptors>
      <interceptor name="ensureUserAccount" class="org.ambraproject.user.EnsureUserAccountInterceptor"/>
      <interceptor name="ensureAdmin" class="org.ambraproject.user.EnsureRoleInterceptor"/>
      <interceptor name="ambraUserLookup" class="org.ambraproject.user.UserAccountsInterceptor"/>
      <interceptor name="json" class="org.apache.struts2.json.JSONInterceptor"/>
      <interceptor name="transactionInterceptor" class="org.ambraproject.struts2.TransactionInterceptor"/>

      <interceptor-stack name="strutsBaseStack">
        <interceptor-ref name="exception">
          <param name="logEnabled">true</param>
          <param name="logCategory">org.ambraproject.UnhandledException</param>
          <param name="logLevel">ERROR</param>
        </interceptor-ref>
        <interceptor-ref name="timer" />
        <interceptor-ref name="logger"/>
        <interceptor-ref name="alias"/>
        <interceptor-ref name="servletConfig"/>
        <interceptor-ref name="prepare"/>
        <interceptor-ref name="i18n"/>
        <interceptor-ref name="debugging"/>
        <interceptor-ref name="modelDriven"/>
        <interceptor-ref name="fileUpload"/>
        <interceptor-ref name="staticParams"/>
        <interceptor-ref name="params">
          <param name="excludeParams">ticket</param>
        </interceptor-ref>
        <interceptor-ref name="conversionError"/>
        <interceptor-ref name="validation">
          <param name="excludeMethods">input,back,cancel,browse</param>
        </interceptor-ref>
        <interceptor-ref name="workflow">
           <param name="excludeMethods">input,back,cancel,browse</param>
        </interceptor-ref>
      </interceptor-stack>

      <interceptor-stack name="ambraBaseStack">
        <interceptor-ref name="strutsBaseStack"/>
        <interceptor-ref name="ambraUserLookup"/>
        <interceptor-ref name="transactionInterceptor" />
      </interceptor-stack>

      <!--We're duplicating interceptors from ambraBaseStack because we need to ensure that
      transactionInterceptor gets called after ensureUserAccount, ambraUserLookup, etc., since those
      have their own transactions-->
      <interceptor-stack name="ambraUserStack">
        <interceptor-ref name="strutsBaseStack"/>
        <interceptor-ref name="ambraUserLookup"/>
        <interceptor-ref name="ensureUserAccount" />
        <interceptor-ref name="transactionInterceptor" />
      </interceptor-stack>

      <interceptor-stack name="ambraAdminStack">
        <interceptor-ref name="strutsBaseStack"/>
        <interceptor-ref name="ambraUserLookup"/>
        <interceptor-ref name="ensureUserAccount" />
        <interceptor-ref name="ensureAdmin" />
        <interceptor-ref name="transactionInterceptor" />
      </interceptor-stack>

      <interceptor-stack name="minimalStack">
        <interceptor-ref name="logger"/>
        <interceptor-ref name="timer"/>
        <interceptor-ref name="servletConfig"/>
      </interceptor-stack>
    </interceptors>

    <default-interceptor-ref name="ambraUserStack" />

    <global-results>
      <result name="new-profile" type="redirectAction">
        <param name="actionName">prePopulateNewUser</param>
        <param name="namespace">/user</param>
      </result>
      <result name="update-profile" type="redirectAction">
        <param name="actionName">prePopulateNewUser</param>
        <param name="namespace">/user</param>
      </result>
      <result name="role-insufficient" type="ambraFreemarker">
        <param name="templateFile">/user/inSufficientRole.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="templateFile">/static/error.ftl</param>
      </result>
    </global-results>

    <global-exception-mappings >
      <exception-mapping exception="java.lang.Exception" result="error"/>
    </global-exception-mappings>

    <action name="logout" class="org.ambraproject.action.LogoutAction">
      <result name="success" type="redirect">/home.action</result>
    </action>

    <action name="trackback" class="org.ambraproject.action.TrackbackAction">
      <result name="success">
        <param name="location">/trackback/success.ftl</param>
        <param name="contentType">application/xml</param>
      </result>
      <result name="error">
        <param name="location">/trackback/error.ftl</param>
        <param name="contentType">application/xml</param>
      </result>
    </action>

    <action name="pageNotFound" class="org.ambraproject.action.PageNotFoundAction">
      <interceptor-ref name="minimalStack"/>
      <result name="success" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="home" class="org.ambraproject.action.HomePageAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/index.ftl</param>
      </result>
    </action>

    <action name="recentArticles" class="org.ambraproject.action.HomePageAction">
      <result name="success" type="naked">
        <param name="templateFile">/article/recentArticles.ftl</param>
      </result>
    </action>

    <action name="mostCommented" class="org.ambraproject.action.HomePageAction">
      <result name="success" type="naked">
        <param name="templateFile">/article/mostCommented.ftl</param>
      </result>
    </action>

    <action name="mostViewed" class="org.ambraproject.action.MostViewedAction">
      <result name="success" type="naked">
        <param name="templateFile">/article/mostViewed.ftl</param>
      </result>
    </action>

    <action name="feedbackCreate" class="org.ambraproject.action.FeedbackAction" method="executeRender">
      <result type="ambraFreemarker">
        <param name="templateFile">/feedback/feedbackEntry.ftl</param>
      </result>
    </action>

    <action name="feedback" class="org.ambraproject.action.FeedbackAction" method="executeSend">
      <result name="error" type="ambraFreemarker">
        <param name="templateFile">/feedback/feedbackEntry.ftl</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/feedback/feedbackEntry.ftl</param>
      </result>
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/feedback/feedbackSuccess.ftl</param>
      </result>
    </action>

    <action name="selectList" class="org.ambraproject.action.ListingAction"/>

  </package>

  <package name="search" extends="default" namespace="/search">

    <default-action-ref name="pageNotFound" />

    <action name="searchStart" class="org.ambraproject.action.NoOpAction">
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/search/searchResults.ftl</param>
      </result>
    </action>

    <action name="simpleSearch" class="org.ambraproject.search.action.SearchAction" method="executeSimpleSearch">
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/search/searchResults.ftl</param>
      </result>
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/search/searchResults.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="templateFile">/static/searchError.ftl</param>
      </result>
    </action>

    <action name="advancedSearch" class="org.ambraproject.search.action.SearchAction" method="executeUnformattedSearch">
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/search/searchUnformatted.ftl</param>
      </result>
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/search/searchResults.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="templateFile">/static/searchError.ftl</param>
      </result>
    </action>

    <action name="findAnArticleSearch" class="org.ambraproject.search.action.SearchAction" method="executeFindAnArticleSearch">
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/search/searchUnformatted.ftl</param>
      </result>
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/search/searchResults.ftl</param>
      </result>
      <result name="redirectToArticle" type="redirect">${journalURL}/article/fetchArticle.action?articleURI=${articleURI}</result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="templateFile">/static/searchError.ftl</param>
      </result>
    </action>

    <action name="listFacet" class="org.ambraproject.search.action.ListFacetAction" method="listFacet">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/search/searchFacet.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="templateFile">/static/searchError.ftl</param>
      </result>
    </action>

    <action name="indexAllArticlesUnprotected" class="org.ambraproject.admin.action.IndexArticlesAction" method="indexAll">
      <result name="success">/admin/allIndexedArticles.ftl</result>
      <result name="error">/admin/indexAllArticlesFailed.ftl</result>
    </action>

  </package>

  <package name="static" extends="default" namespace="/static">
    <action name="*" class="org.ambraproject.action.NoOpAction">
      <interceptor-ref name="minimalStack"/>
      <result name="success" type="ambraStaticFreemarker">
        <param name="templateFile">/static/{1}.ftl</param>
      </result>
    </action>
  </package>

  <package name="rate" extends="default" namespace="/rate">

    <default-action-ref name="pageNotFound" />
    <action name="getAverageRatings" class="org.ambraproject.rating.action.GetAverageRatingsAction">
      <result name="success">/WEB-INF/pages/article/articleRatings.ftl</result>
      <result name="error">/WEB-INF/pages/article/articleRatings.ftl</result>
    </action>
    <action name="getUpdatedRatings" class="org.ambraproject.rating.action.GetAverageRatingsAction">
     <result name="success" type="ambraFreemarker">
        <param name="location">/article/article_rhc_rating.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>
    <action name="getUpdatedRatingsOnArticleMetricsTab" class="org.ambraproject.rating.action.GetAverageRatingsAction">
     <result name="success" type="ambraFreemarker">
       <param name="location">/article/article_metrics_rating.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>
    <action name="getArticleRatings" class="org.ambraproject.rating.action.GetArticleRatingsAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/rating/index.ftl</param>
      </result>
      <result name="none" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>
  </package>

  <package name="rate-secure" extends="default" namespace="/rate/secure">

    <default-action-ref name="pageNotFound" />

    <action name="rateArticle" class="org.ambraproject.rating.action.RateAction" method="rateArticle">
      <result name="input" type="json"/>
      <result name="success" type="json"/>
      <result name="error" type="json"/>
    </action>

    <action name="createRatingFlagSubmit" class="org.ambraproject.annotation.action.CreateFlagAction">
      <result name="input"   type="json"/>
      <result name="error"   type="json"/>
      <result name="success" type="json"/>
    </action>

    <action name="getRatingsForUser" class="org.ambraproject.rating.action.RateAction" method="retrieveRatingsForUser">
      <result name="input" type="json"/>
      <result name="success" type="json"/>
      <result name="error" type="json"/>
    </action>
  </package>

  <package name="article" extends="default" namespace="/article">

    <default-action-ref name="pageNotFound" />

    <action name="emailArticle" class="org.ambraproject.article.action.EmailArticleAction" method="executeRender">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/emailArticle.ftl</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="findArticle" class="org.ambraproject.article.action.FindArticleAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/findArticle.ftl</param>
      </result>
    </action>

    <action name="emailThisArticleCreate" class="org.ambraproject.article.action.EmailArticleAction" method="executeRender">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/emailArticle/emailArticle.ftl</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="emailThisArticleSubmit" class="org.ambraproject.article.action.EmailArticleAction" method="executeSend">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/emailSuccess.ftl</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/article/emailArticle.ftl</param>
      </result>
    </action>

    <action name="fetchArticle" class="org.ambraproject.article.action.FetchArticleAction" method="fetchArticle">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/article_body.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
      <!-- TODO, This could be handled better -->
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchArticleComments" class="org.ambraproject.article.action.FetchArticleAction" method="fetchArticleComments">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/article_comments.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchArticleCorrections" class="org.ambraproject.article.action.FetchArticleAction" method="fetchArticleCorrections">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/article_comments.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchArticleMetrics" class="org.ambraproject.article.action.FetchArticleAction" method="fetchArticleMetrics">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/article_metrics.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchRelatedArticle" class="org.ambraproject.article.action.FetchArticleAction" method="fetchArticleRelated">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/article_related.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchArticleCrossRef" class="org.ambraproject.article.action.FetchArticleAction" method="fetchArticleCrossRef">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/article_crossref.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="slideshow" class="org.ambraproject.article.action.SlideshowAction">
      <result name="success" type="headless">
        <param name="templateFile">/article/imageWindow.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="showImageLarge" class="org.ambraproject.action.NoOpAction">
      <result name="success" type="headless">
        <param name="templateFile">/article/imageWindowLarge.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchObjectAttachment" class="org.ambraproject.article.action.FetchObjectAction" method="fetchObjectAction">
      <result name="success" type="ambraStream">
        <param name="isAttachment">true</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchFullDOIXML" class="org.ambraproject.article.action.FetchObjectAction" method="fetchObjectAction">
      <param name="fullDOI">true</param>
      <param name="representation">XML</param>
      <result name="success" type="ambraStream">
        <param name="isAttachment">true</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchObject" class="org.ambraproject.article.action.FetchObjectAction" method="fetchObjectAction">
      <result name="success" type="ambraStream">
        <param name="isAttachment">false</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchSingleRepresentation" class="org.ambraproject.article.action.FetchObjectAction" method="fetchSingleRepresentation">
      <result name="success" type="ambraStream">
        <param name="isAttachment">true</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchAnnotatedArticle" class="org.ambraproject.article.action.FetchArticleAction" method="displayAnnotatedArticle">
      <result name="success">/article/displayArticle.ftl</result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="fetchBody" class="org.ambraproject.article.action.FetchArticleAction" method="fetchArticle">
      <result name="success" type="ambraFreemarker">
        <param name="location">/article/article_content.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>

    <action name="browse" class="org.ambraproject.article.action.BrowseArticlesAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/browse.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="templateFile">/static/browseError.ftl</param>
      </result>
    </action>

    <action name="browseIssue" class="org.ambraproject.article.action.BrowseIssueAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/browseIssue.ftl</param>
      </result>
      <result name="none" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
      <!-- TODO: Make a real error page -->
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="browseVolume" class="org.ambraproject.article.action.BrowseVolumeAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/browseVolume.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="citationList" class="org.ambraproject.article.action.CreateCitation">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/article/citationList.ftl</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>
    <action name="getRisCitation" class="org.ambraproject.article.action.CreateCitation">
      <result name="success" type="citation">
        <param name="location">/article/ris.ftl</param>
        <param name="contentType">text/plain</param>
        <param name="fileExtension">.ris</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>
    <action name="getBibTexCitation" class="org.ambraproject.article.action.CreateCitation">
      <result name="success" type="citation">
        <param name="location">/article/bibtex.ftl</param>
        <param name="contentType">text/plain</param>
        <param name="fileExtension">.bib</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/articleNotFound.ftl</param>
      </result>
    </action>
  </package>

  <package name="article-feed" extends="default" namespace="/article/feed">

    <default-action-ref name="pageNotFound" />

    <action name="getFeed" class="org.ambraproject.feed.action.FeedAction">
      <result name="success" type="feed"/>
      <result name="input" type="httpheader">
        <param name="status">400</param><!-- Http status: Bad Request-->
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="templateFile">/static/feedError.ftl</param>
      </result>
    </action>
  </package>

  <package name="annotation" extends="default" namespace="/annotation">

    <default-action-ref name="pageNotFound" />

    <action name="listAnnotation" class="org.ambraproject.annotation.action.ListAnnotationAction">
      <result name="success">/annotation/listAnnotation.ftl</result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="getFormalCorrections" class="org.ambraproject.annotation.action.ListAnnotationAction" method="fetchFormalCorrections">
      <result name="success" type="json">
      	<param name="excludeProperties">advisors, callbacks, annotations</param>
      </result>
    </action>

    <action name="getRetractions" class="org.ambraproject.annotation.action.ListAnnotationAction" method="fetchRetractions">
      <result name="success" type="json">
      	<param name="excludeProperties">advisors, callbacks, annotations</param>
      </result>
    </action>

    <action name="getAnnotation" class="org.ambraproject.annotation.action.GetAnnotationAction">
      <result name="success" type="json">
        <!--param name="excludeProperties">advisors, callbacks, annotations</param-->
        <param name="ignoreHierarchy">false</param>
        <param name="includeProperties">
          annotationId,
          actionErrors,
          actionMessages,
          numFieldErrors,
          fieldErrors,
          creatorUserName,
          currentJournal,
          annotation,
          cisStartDateMillis,
          annotation.commentTitle,
          annotation.creator,
          annotation.createdAsMillis,
          annotation.escapedTruncatedComment,
          annotation.type,
          annotation.truncatedCIStatement
        </param>
      </result>
    </action>

    <action name="listReply" class="org.ambraproject.annotation.action.ListReplyAction">
      <result name="success">/annotation/listReply.ftl</result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="listAllReplies" class="org.ambraproject.annotation.action.ListReplyAction"
      method="listAllReplies">
      <result name="success">/annotation/listReply.ftl</result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="listThreadedReplies" class="org.ambraproject.annotation.action.ListReplyAction"
      method="listAllReplies">
      <result name="success">/annotation/listThreadedReply.ftl</result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="listThread" class="org.ambraproject.annotation.action.ListReplyAction" method="listAllReplies">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/discussion/discussion.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="getCommentary" class="org.ambraproject.annotation.action.GetCommentaryAction" method="listComments">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/discussion/commentary.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="getCorrectionsCommentary" class="org.ambraproject.annotation.action.GetCommentaryAction" method="listCorrections">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/discussion/corrections.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="listThreadRefresh" class="org.ambraproject.annotation.action.ListReplyAction" method="listAllReplies">
      <result name="success" type="ambraFreemarker">
        <param name="location">/discussion/threaded_replies.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="getReply" class="org.ambraproject.annotation.action.GetReplyAction">
      <result name="success" type="json"/>
    </action>

    <action name="listFlags" class="org.ambraproject.annotation.action.ListFlagAction">
      <result name="success">/annotation/listFlag.ftl</result>
      <result name="error" type="ambraFreemarker">
        <param name="status">404</param>
        <param name="templateFile">/static/pageNotFound.ftl</param>
      </result>
    </action>

    <action name="getFlag" class="org.ambraproject.annotation.action.GetFlagAction">
      <result name="success" type="json"/>
    </action>
  </package>

  <package name="annotation-secure" extends="default" namespace="/annotation/secure">

    <default-action-ref name="pageNotFound" />

    <action name="createAnnotation">
      <result>/annotation/createAnnotation.ftl</result>
    </action>

    <action name="startDiscussion" class="org.ambraproject.annotation.action.GetCommentaryAction" method="getArticleMetaInfo">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/discussion/startDiscussion.ftl</param>
      </result>
    </action>

    <action name="createAnnotationSubmit" class="org.ambraproject.annotation.action.CreateAnnotationAction">
      <result name="input" type="json"/>
      <result name="error" type="json"/>
      <result name="success" type="json"/>
    </action>

    <action name="createDiscussionSubmit" class="org.ambraproject.annotation.action.CreateAnnotationAction">
      <result name="input" type="json"/>
      <result name="error" type="json"/>
      <result name="success" type="json"/>
    </action>

    <action name="deleteAnnotation" class="org.ambraproject.annotation.action.DeleteAnnotationAction" method="deleteAnnotation">
      <result name="success" type="redirect">/home.action</result>
    </action>

    <action name="createReplySubmit" class="org.ambraproject.annotation.action.CreateReplyAction">
      <result name="input" type="json"/>
      <result name="error" type="json"/>
      <result name="success" type="json"/>
    </action>

    <action name="deleteReply" class="org.ambraproject.annotation.action.DeleteReplyAction" method="deleteReplyWithId">
      <result name="success" type="redirect">/home.action</result>
    </action>

    <!--TODO: not needed ?? -->
    <action name="createFlag">
      <result>/annotation/createFlag.ftl</result>
    </action>

    <action name="createAnnotationFlagSubmit" class="org.ambraproject.annotation.action.CreateFlagAction">
      <result name="input" type="json"/>
      <result name="error" type="json"/>
      <result name="success" type="json"/>
    </action>

    <action name="createReplyFlagSubmit" class="org.ambraproject.annotation.action.CreateFlagAction">
      <result name="input" type="json"/>
      <result name="error" type="json"/>
      <result name="success" type="json"/>
    </action>

    <action name="deleteFlag" class="org.ambraproject.annotation.action.DeleteFlagAction">
      <result name="success" type="redirect">/home.action</result>
    </action>

  </package>

  <package name="user-secure" extends="default" namespace="/user/secure">

    <default-action-ref name="pageNotFound" />

    <action name="secureRedirect" class="org.ambraproject.action.RedirectAction">
      <result type="redirect">
        <param name="location">${goTo}</param>
        <param name="prependServletContext">false</param>
      </result>
    </action>

    <action name="getUserProfilePrivateFields" class="org.ambraproject.user.action.DisplayUserAction" method="fetchUserProfileWithPrivateVisibility">
      <result name="success">/user/displayPrivateFieldNames.ftl</result>
    </action>

    <action name="editAjaxAlerts" class="org.ambraproject.user.action.MemberUserAlertsAction" method="retrieveAlerts">
      <result name="success"  type="ambraFreemarker">
        <param name="location">/user/alerts.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="location">/user/alerts.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="location">/user/alerts.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="retrieveUserAlerts" class="org.ambraproject.user.action.MemberUserAlertsAction" method="retrieveAlerts">
      <result name="success">/user/alerts.ftl</result>
      <result name="input">/user/alerts.ftl</result>
    </action>

    <action name="saveAjaxAlerts" class="org.ambraproject.user.action.MemberUserAlertsAction" method="saveAlerts">
      <result name="success"  type="ambraFreemarker">
        <param name="location">/user/alerts.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="input">type="ambraFreemarker">
        <param name="location">/user/alerts.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error">type="ambraFreemarker">
        <param name="location">/user/alerts.ftl</param>
        <param name="noCache">true</param>
      </result>
     </action>

    <action name="editProfile" class="org.ambraproject.user.action.MemberUserProfileAction" method="executeRetrieveUserProfile">
      <result name="success" type="user">
        <param name="templateFile">/user/editUser.ftl</param>
      </result>
      <result name="input" type="user">
        <param name="templateFile">/user/editUser.ftl</param>
      </result>
    </action>

    <action name="editPrefsAlerts" class="org.ambraproject.user.action.MemberUserAlertsAction" method="retrieveAlerts">
      <result name="success" type="user">
        <param name="templateFile">/user/editUser.ftl</param>
      </result>
      <result name="input" type="user">
        <param name="templateFile">/user/editUser.ftl</param>
      </result>
    </action>

    <action name="editAjaxProfile" class="org.ambraproject.user.action.MemberUserProfileAction" method="executeRetrieveUserProfile">
      <result name="success" type="ambraFreemarker">
        <param name="location">/user/user.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="location">/user/user.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="location">/user/user.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="saveAjaxProfile" class="org.ambraproject.user.action.MemberUserProfileAction" method="executeSaveUser">
      <result name="success" type="redirectAction">editAjaxProfile.action</result>
      <result name="input" type="ambraFreemarker">
        <param name="location">/user/user.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="status">500</param>
        <param name="location">/static/error.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="saveProfile" class="org.ambraproject.user.action.MemberUserProfileAction" method="executeSaveUser">
      <result name="success" type="redirect">/user/secure/retrieveUserProfile.action </result>
      <result name="input" type="user">
        <param name="templateFile">/user/createNewUser.ftl</param>
      </result>
    </action>

    <action name="retrieveUserProfile" class="org.ambraproject.user.action.MemberUserProfileAction" method="executeRetrieveUserProfile">
      <result name="success" type="user">
        <param name="templateFile">/user/createNewUser.ftl</param>
      </result>
      <result name="input">/user/newUser.ftl</result>
      <result name="error" type="user">
        <param name="templateFile">/user/newUser.ftl</param>
      </result>
    </action>

    <action name="profile" class="org.ambraproject.action.NoOpAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/user/profile.ftl</param>
      </result>
    </action>
  </package>

  <package name="user" extends="default" namespace="/user">
    <default-interceptor-ref name="ambraBaseStack" />

    <default-action-ref name="pageNotFound" />

    <action name="prePopulateNewUser" class="org.ambraproject.user.action.MemberUserProfileAction" method="prePopulateUserDetails">
      <result name="new-profile" type="user">
        <param name="templateFile">/user/createNewUser.ftl</param>
      </result>
      <result name="update-profile" type="user">
        <param name="templateFile">/user/createNewUser.ftl</param>
      </result>
      <result name="success" type="redirect">/</result>
    </action>

    <action name="createNewUser" class="org.ambraproject.user.action.MemberUserProfileAction" method="executeSaveUser">
      <result name="success" type="redirect">/user/secure/editPrefsAlerts.action?tabId=alerts</result>
      <result name="input" type="user">
        <param name="templateFile">/user/createNewUser.ftl</param>
      </result>
    </action>

    <!-- TODO: not needed ??? -->
    <action name="newUser">
      <result>/user/newUser.ftl</result>
    </action>

    <action name="displayUser" class="org.ambraproject.user.action.DisplayUserAction">
      <result name="success">/user/displayUser.ftl</result>
    </action>

    <action name="showUser" class="org.ambraproject.user.action.DisplayUserAction">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/user/displayUser.ftl</param>
      </result>
    </action>

    <action name="displayUserAJAX" class="org.ambraproject.user.action.DisplayUserAction">
      <result name="success">/widget/userProfileTooltip.ftl</result>
    </action>

  </package>

  <package name="admin" extends="default" namespace="/admin">
    <default-interceptor-ref name="ambraAdminStack" />

    <default-action-ref name="pageNotFound" />

    <action name="adminTop" class="org.ambraproject.admin.action.AdminTopAction">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="disableArticle" class="org.ambraproject.admin.action.AdminTopAction" method="disableArticle">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="deleteArticle" class="org.ambraproject.admin.action.DeleteArticleAction">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/articleDelete.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="deleteArticleDelete" class="org.ambraproject.admin.action.DeleteArticleAction"
            method="deleteArticle">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/articleDelete.ftl</param>
        <param name="noCache">true</param>
      </result>
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/articleDelete.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="articleSyndicationHistory" class="org.ambraproject.admin.action.ArticleSyndicationHistory">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/articleSyndicationHistory.ftl</param>
        <param name="noCache">true</param>
      </result>

      <!-- stay in adminTop even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="reSyndicateArticle" class="org.ambraproject.admin.action.ArticleSyndicationHistory" method="resyndicate">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/articleSyndicationHistory.ftl</param>
        <param name="noCache">true</param>
      </result>

      <!-- stay in adminTop even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/articleSyndicationHistory.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="markSyndicationAsFailed" class="org.ambraproject.admin.action.ArticleSyndicationHistory" method="markSyndicationAsFailed">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/articleSyndicationHistory.ftl</param>
        <param name="noCache">true</param>
      </result>

      <!-- stay in adminTop even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/articleSyndicationHistory.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="unpublishArticle" class="org.ambraproject.admin.action.AdminTopAction" method="unpublish">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
      <!-- stay in adminTop even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="ingestArchives" class="org.ambraproject.admin.action.AdminTopAction" method="ingest">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
      <!-- stay in adminTop even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>
      
    <action name="processArticles" class="org.ambraproject.admin.action.AdminTopAction" method="processArticles">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
      <!-- stay in adminTop even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="resyndicateFailedArticles" class="org.ambraproject.admin.action.AdminTopAction" method="resyndicateFailedArticles">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
      <!-- stay in adminTop even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/adminTop.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <action name="viewRating" class="org.ambraproject.admin.action.ViewRatingAction">
        <result name="success">/admin/viewRating.ftl</result>
    </action>

    <action name="viewReply" class="org.ambraproject.annotation.action.GetReplyAction">
        <result name="success">/admin/viewReply.ftl</result>
    </action>

    <action name="findUser" class="org.ambraproject.user.action.SearchUserAction">
        <result>/user/searchUser.ftl</result>
    </action>

    <action name="findUserByAuthId" class="org.ambraproject.user.action.SearchUserAction" method="executeFindUserByAuthId">
      <result name="success">/user/searchUser.ftl</result>
      <result name="input">/user/searchUser.ftl</result>
    </action>

    <action name="findUserByAccountId" class="org.ambraproject.user.action.SearchUserAction" method="executeFindUserByAccountId">
      <result name="success">/user/searchUser.ftl</result>
      <result name="input">/user/searchUser.ftl</result>
    </action>

    <action name="findUserByEmailAddress" class="org.ambraproject.user.action.SearchUserAction" method="executeFindUserByEmailAddress">
      <result name="success">/user/searchUser.ftl</result>
      <result name="input">/user/searchUser.ftl</result>
    </action>

    <action name="findUserByName" class="org.ambraproject.user.action.SearchUserAction" method="executeFindUserByName">
      <result name="success">/user/searchUser.ftl</result>
      <result name="input">/user/searchUser.ftl</result>
    </action>

    <action name="assignAdminRole" class="org.ambraproject.user.action.AssignAdminRoleAction">
      <result name="success">/user/searchUser.ftl</result>
      <result name="error">/user/searchUser.ftl</result>
      <result name="input">/user/searchUser.ftl</result>
    </action>

    <action name="editProfileByAdmin" class="org.ambraproject.user.action.AdminUserProfileAction" method="executeRetrieveUserProfile">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/user/user.ftl</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/user/user.ftl</param>
      </result>
    </action>

    <action name="saveProfileByAdmin" class="org.ambraproject.user.action.AdminUserProfileAction" method="executeSaveUser">
      <result name="success" type="chain">
        <param name="actionName">editProfileByAdmin</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/user/user.ftl</param>
      </result>
    </action>

    <action name="retrieveUserAlertsByAdmin" class="org.ambraproject.user.action.AdminUserAlertsAction" method="retrieveAlerts">
      <result name="success" type="ambraFreemarker">
        <param name="templateFile">/user/alerts.ftl</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/user/alerts.ftl</param>
      </result>
    </action>

    <action name="saveAlertsByAdmin" class="org.ambraproject.user.action.AdminUserAlertsAction" method="saveAlerts">
      <result name="success" type="chain">
        <param name="actionName">retrieveUserAlertsByAdmin</param>
      </result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/user/alerts.ftl</param>
      </result>
    </action>

    <!-- Navigate to the Manage Flags page without doing any processing of those flags -->
    <action name="manageFlags" class="org.ambraproject.admin.action.ManageFlagsAction">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/manageFlags.ftl</param>
      </result>
      <!-- stay in manageFlags even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/manageFlags.ftl</param>
      </result>
    </action>

    <!-- Process the changes made to the flags on the Manage Flags page -->
    <action name="processFlags" class="org.ambraproject.admin.action.ManageFlagsAction" method="processFlags">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/manageFlags.ftl</param>
        <param name="noCache">true</param>
      </result>
      <!-- stay in manageFlags even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/manageFlags.ftl</param>
        <param name="noCache">true</param>
      </result>
    </action>

    <!-- Navigate to the Manage Annotation page without querying or showing an Annotation -->
    <action name="manageAnnotation" class="org.ambraproject.admin.action.ManageAnnotationAction">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/manageAnnotation.ftl</param>
      </result>
      <!-- stay in manageAnnotation even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/manageAnnotation.ftl</param>
      </result>
    </action>

    <!-- Navigate to the Manage Annotation page and query/show the Annotation indicated by annotationId -->
    <action name="manageAnnotationLoad" class="org.ambraproject.admin.action.ManageAnnotationAction"
      method="loadAnnotation">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/manageAnnotation.ftl</param>
      </result>
      <!-- stay in manageAnnotation even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/manageAnnotation.ftl</param>
      </result>
    </action>

    <action name="manageAnnotationSave" class="org.ambraproject.admin.action.ManageAnnotationAction"
      method="saveAnnotation">
      <result name="success" type="ambraFreemarker">
        <param name="location">/admin/manageAnnotation.ftl</param>
      </result>
      <!-- stay in manageAnnotation even on error -->
      <result name="error" type="ambraFreemarker">
        <param name="location">/admin/manageAnnotation.ftl</param>
      </result>
    </action>

    <action name="manageVirtualJournals" class="org.ambraproject.admin.action.ManageVirtualJournalsAction">
      <result name="success">/admin/manageVirtualJournals.ftl</result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/admin/manageVirtualJournals.ftl</param>
      </result>
    </action>

    <action name="issueManagement" class="org.ambraproject.admin.action.IssueManagementAction">
      <result name="success">/admin/issueManagement.ftl</result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/admin/issueManagement.ftl</param>
      </result>
    </action>

    <action name="volumeManagement" class="org.ambraproject.admin.action.VolumeManagementAction">
      <result name="success">/admin/volumeManagement.ftl</result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/admin/volumeManagement.ftl</param>
      </result>
    </action>

    <action name="crossPubManagement" class="org.ambraproject.admin.action.CrossPubManagementAction">
      <result name="success">/admin/crossPubManagement.ftl</result>
      <result name="input" type="ambraFreemarker">
        <param name="templateFile">/admin/crossPubManagement.ftl</param>
      </result>
    </action>

    <action name="manageCaches" class="org.ambraproject.admin.action.ManageCachesAction">
        <result name="success">/admin/manageCaches.ftl</result>
    </action>

    <action name="manageSearchIndexing" class="org.ambraproject.admin.action.IndexArticlesAction">
      <result name="success">/admin/indexArticle.ftl</result>
    </action>

    <action name="indexArticle" class="org.ambraproject.admin.action.IndexArticlesAction" method="indexOne">
      <result name="success">/admin/indexArticle.ftl</result>
    </action>

    <action name="indexAllArticles" class="org.ambraproject.admin.action.IndexArticlesAction" method="indexAll">
      <result name="success">/admin/allIndexedArticles.ftl</result>
      <result name="error">/admin/indexAllArticlesFailed.ftl</result>
    </action>

  </package>

</struts>
