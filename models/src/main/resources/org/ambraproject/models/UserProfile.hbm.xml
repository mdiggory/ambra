<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ $HeadURL$
  ~ $Id$
  ~ Copyright (c) 2006-2012 by Public Library of Science http://plos.org http://ambraproject.org
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.ambraproject.models" default-lazy="false">

  <class name="UserProfile" table="userProfile">
    <id name="ID" column="userProfileID" type="long">
      <generator class="native" />
    </id>
    <timestamp name="lastModified" column="lastModified"/>
    <property name="created" column="created" type="timestamp" not-null="true" update="false" />

    <property name="email" column="email" type="string" length="255" unique="true"/>
    <property name="displayName" column="displayName" type="string" length="255" unique="true"/>
    <property name="authId" column="authId" type="string" length="512" unique="true"/>

    <!-- TODO: These properties are legacy and should be removed once annotations are refactored-->
    <property name="accountUri" column="userAccountURI" type="string" length="100"/>
    <property name="profileUri" column="userProfileURI" type="string" length="100"/>

    <property name="accountState" column="accountState" type="integer" not-null="true"/>
    <property name="realName" column="realName" type="string" length="500"/>
    <property name="givenNames" column="givenNames" type="string" length="255"/>
    <property name="surname" column="surName" type="string" length="15"/>
    <property name="title" column="title" type="string" length="255"/>
    <property name="gender" column="gender" type="string" length="15"/>
    <property name="homePage" column="homePage" type="string" length="512"/>
    <property name="weblog" column="weblog" type="string" length="512"/>
    <property name="publications" column="publications" type="string" length="255"/>
    <property name="suffix" column="suffix" type="string" length="255"/>
    <property name="positionType" column="positionType" type="string" length="255"/>
    <property name="organizationName" column="organizationName" type="string" length="512"/>
    <property name="organizationType" column="organizationType" type="string" length="255"/>
    <property name="city" column="city" type="string" length="255"/>
    <property name="country" column="country" type="string" length="255"/>
    <property name="organizationVisibility" type="boolean" not-null="true"/>

    <property name="researchAreas" column="researchAreas" type="text"/>
    <property name="postalAddress" column="postalAddress" type="text"/>
    <property name="alertsJournals" column="alertsJournals" type="text"/>
    <property name="biography" column="biography" type="text"/>
    <property name="interests" column="interests" type="text"/>

    <!--We don't want to cascade to roles; creating those should be a totally separate process from creating/users-->
    <set name="roles" cascade="none" table="userProfileRoleJoinTable" fetch="join">
      <key column="userProfileID"/>
      <many-to-many column="userRoleID" class="UserRole"/>
    </set>

  </class>

</hibernate-mapping>
