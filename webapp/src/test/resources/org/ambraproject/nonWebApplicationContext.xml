<?xml version="1.0" encoding="UTF-8"?>
<!--
~ $HeadURL$
~ $Id$
~ Copyright (c) 2006-2011 by Public Library of Science
~ http://plos.org
~ http://ambraproject.org
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~ http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
    xmlns:tx="http://www.springframework.org/schema/tx" default-lazy-init="true">

  <import resource="hibernate-context.xml"/>

  <!--Transaction manager stuff.
  This lets transactions be wrapped around service invocations as they would in production-->
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

  <!--Cache stuff-->

  <bean id="articleHtmlCache" class="org.ambraproject.cache.MockCache"/>

  <!--The doi for the article that's in the test filestore-->
  <bean class="java.lang.String" id="articleInFilestore">
    <constructor-arg index="0" value="info:doi/10.1371/journal.pgen.1000096"/>
  </bean>

  <bean id="fileStoreService" class="org.ambraproject.filestore.impl.FileSystemImpl">
    <constructor-arg index="0" value="${project.basedir}/target/test-classes/filestore"/>
    <constructor-arg index="1" value=""/>
  </bean>


  <bean id="ambraConfiguration" class="org.ambraproject.testutils.AmbraTestConfigurationFactory"
        factory-method="getConfiguration">
    <constructor-arg index="0" value="ambra-test-config.xml"/>
  </bean>

  <!--Solr server factory-->
  <bean id="solrServerFactory" class="org.ambraproject.testutils.EmbeddedSolrServerFactory"
        destroy-method="tearDown"/>

  <!-- Set up XML factories -->
  <bean id="documentBuilderFactory" class="org.ambraproject.util.DocumentBuilderFactoryCreator"
        factory-method="createFactory"/>
  <bean id="documentBuilder" factory-bean="documentBuilderFactory" factory-method="newDocumentBuilder"/>

  <!--Service Beans-->
  <!-- Set up XML factories -->
  <bean id="permissionsService" class="org.ambraproject.permission.service.PermissionsServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <bean id="annotationService" class="org.ambraproject.annotation.service.AnnotationServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="articleHtmlCache" ref="articleHtmlCache"/>
  </bean>

  <bean id="articleAssetService" class="org.ambraproject.article.service.ArticleAssetServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="permissionsService" ref="permissionsService"/>
    <property name="articleService" ref="articleService"/>
    <property name="smallImageRep" value="png_s"/>
    <property name="mediumImageRep" value="png_m"/>
    <property name="largeImageRep" value="png_l"/>
  </bean>

  <bean id="articleService" class="org.ambraproject.article.service.ArticleServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="permissionsService" ref="permissionsService"/>
    <property name="journalService" ref="journalService"/>
  </bean>

  <bean id="trackbackService" class="org.ambraproject.trackback.TrackbackServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="configuration" ref="ambraConfiguration"/>
  </bean>

  <bean id="ratingsService" class="org.ambraproject.rating.service.RatingsServiceImpl">
    <property name="applicationId" ref="applicationId"/>
    <property name="permissionsService" ref="permissionsService"/>
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <bean id="journalService" class="org.ambraproject.journal.JournalServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="configuration" ref="ambraConfiguration"/>
  </bean>

  <bean id="browseService" class="org.ambraproject.article.service.BrowseServiceImpl" depends-on="ambraConfiguration">
    <property name="journalService" ref="journalService"/>
    <property name="browseSolrCache">
      <null/>
    </property>
    <property name="configuration" ref="ambraConfiguration"/>
    <property name="serverFactory" ref="solrServerFactory"/>
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="articleService" ref="articleService"/>
  </bean>

  <bean id="searchService" class="org.ambraproject.search.service.SolrSearchService">
    <property name="serverFactory" ref="solrServerFactory"/>
    <property name="configuration" ref="ambraConfiguration"/>
  </bean>

  <bean id="ambraMailer" class="org.ambraproject.service.DummyAmbraMailer"/>

  <bean id="applicationId" class="java.lang.String">
    <constructor-arg index="0" value="topaz-ambra"/>
  </bean>

  <bean id="userService" class="org.ambraproject.user.service.UserServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="permissionsService" ref="permissionsService"/>
    <property name="configuration" ref="ambraConfiguration"/>
    <property name="emailAddressUrl" value="http://localhost:1234/select"/>
    <property name="authIdParam" value="guid"/>
  </bean>

  <util:map id="xslArticleTransformStyleSheetMap">
    <entry key="default"
           value="${project.basedir}/src/main/resources/viewnlm-v2.xsl"/>
    <entry key="2.0"
           value="${project.basedir}/src/main/resources/viewnlm-v2.xsl"/>
    <entry key="3.0"
           value="${project.basedir}/src/main/resources/viewnlm-v2.xsl"/>
  </util:map>

  <bean id="viewNLMService" class="org.ambraproject.service.XMLServiceImpl" init-method="init">
    <property name="articleRep" value="XML"/>
    <property name="xslDefaultTemplate" value="${project.basedir}/src/main/resources/viewnlm-v2.xsl"/>
    <property name="xslTemplateMap" ref="xslArticleTransformStyleSheetMap"/>
    <property name="ambraConfiguration" ref="ambraConfiguration"/>
    <property name="xmlFactoryProperty" ref="xmlFactoryProperties"/>
  </bean>

  <bean id="xmlService" class="org.ambraproject.service.XMLServiceImpl" init-method="init">
    <property name="articleRep" value="XML"/>
    <property name="xslDefaultTemplate" value="${project.basedir}/src/main/resources/viewnlm-v2.xsl"/>
    <property name="xslTemplateMap" ref="xslArticleTransformStyleSheetMap"/>
    <property name="ambraConfiguration" ref="ambraConfiguration"/>
    <property name="xmlFactoryProperty" ref="xmlFactoryProperties"/>
  </bean>

  <util:map id="xslObjTransformStyleSheetMap">
    <entry key="default"
           value="${project.basedir}/src/main/resources/objInfo.xsl"/>
    <entry key="2.0"
           value="${project.basedir}/src/main/resources/objInfo.xsl"/>
    <entry key="3.0"
           value="${project.basedir}/src/main/resources/objInfo.xsl"/>
  </util:map>

  <bean id="secondaryObjectService" class="org.ambraproject.service.XMLServiceImpl" init-method="init">
    <property name="articleRep" value="XML"/>
    <property name="xslDefaultTemplate" value="${project.basedir}/src/main/resources/objInfo.xsl"/>
    <property name="xslTemplateMap" ref="xslObjTransformStyleSheetMap"/>
    <property name="ambraConfiguration" ref="ambraConfiguration"/>
    <property name="xmlFactoryProperty" ref="xmlFactoryProperties"/>
  </bean>

  <util:map id="xmlFactoryProperties">
    <entry key="javax.xml.transform.TransformerFactory"
           value="net.sf.saxon.TransformerFactoryImpl"/>
    <entry key="javax.xml.transform.Transformer"
           value="net.sf.saxon.Controller"/>
  </util:map>

  <bean id="solrFieldConverter" class="org.ambraproject.solr.SolrFieldConversionImpl">
    <property name="allTimeViewsField" value="all_time_views"/>
    <property name="viewCountingFields">
      <map>
        <entry key="14" value="two_week_field"/>
        <entry key="30" value="one_month_field"/>
      </map>
    </property>
  </bean>

  <bean id="fetchArticleService" class="org.ambraproject.article.service.FetchArticleServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="articleHtmlCache" ref="articleHtmlCache"/>
    <property name="annotationService" ref="annotationService"/>
    <property name="fileStoreService" ref="fileStoreService"/>
    <property name="articleTransformService" ref="xmlService"/>
  </bean>


  <bean id="profanityCheckingService" class="org.ambraproject.util.ProfanityCheckingServiceImpl">
    <property name="profaneWords" ref="profaneWords"/>
  </bean>
  <util:list id="profaneWords">
    <value>ass</value>
    <value>ass lick</value>
    <value>asses</value>
    <value>asshole</value>
  </util:list>
</beans>
